# Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/my-project/github.com/username/project.com:$COMMIT_SHA",
        ".",
      ]
  # Push the image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "gcr.io/${PROJECT_ID}/github.com/Gordon-BP/superfan-bot:$COMMIT_SHA",
      ]
  # Deploy image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      - "run"
      - "deploy"
      - "superfan-bot-service"
      - "--image"
      - "gcr.io/my-project/github.com/Gordon-BP/superfan-bot:$COMMIT_SHA"
      - "--region"
      - "us-central1"
      - "--platform"
      - "managed"
    # For Unix Socket connections
  - id: "migrate-socket"
    name: "${_IMAGE_NAME}-proxy"
    dir: sql-proxy
    env:
      - "DATABASE_NAME=${_DATABASE_NAME}"
      - "DATABASE_USER=${_DATABASE_USER}"
      - "INSTANCE_CONNECTION_NAME=${_INSTANCE_CONNECTION_NAME}"
      - "DATABASE_TYPE=${_DATABASE_TYPE}"
    secretEnv:
      - DATABASE_PASS
      - OPENAI_TOKEN
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        /cloudsql/cloud_sql_proxy -instances=${_INSTANCE_CONNECTION_NAME} -dir=/cloudsql & sleep 2;
        if [ $_DATABASE_TYPE = 'mssql' ]; then echo "MSSQL doesn't support Unix Sockets. Skippng."; exit 0; fi;
        python migrate.py # for example.

options:
  dynamic_substitutions: true

substitutions:
  _DATABASE_USER: new-user
  _DATABASE_NAME: database1
  _INSTANCE_CONNECTION_NAME: ${PROJECT_ID}:us-central1:civ6-wikia
  _DATABASE_PORT: '5432'
  _DATABASE_TYPE: postgres
  _DATABASE_PASSWORD_KEY: database_password
  _OPENAI_TOKEN_KEY: openai_token
  _IMAGE_NAME: gcr.io/${PROJECT_ID}/sample-sql-proxy

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/${_DATABASE_PASSWORD_KEY}/versions/latest
      env: DATABASE_PASS
    - versionName: projects/$PROJECT_ID/secrets/${_OPENAI_TOKEN_KEY}/versions/latest
      env: OPENAI_TOKEN
images:
  - gcr.io/${PROJECT_ID}/github.com/Gordon-BP/superfan-bot